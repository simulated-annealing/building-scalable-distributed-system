/**
 * NOTE: This class is auto generated by the swagger code generator program (3.0.21).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package io.swagger.api;

import io.swagger.model.ResponseMsg;
import io.swagger.model.TopTen;
import io.swagger.annotations.*;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.multipart.MultipartFile;
import org.springframework.web.bind.annotation.CookieValue;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
import java.util.Map;
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.SpringCodegen", date = "2020-10-24T02:33:34.409Z[GMT]")
@Api(value = "resort", description = "the resort API")
public interface ResortApi {

    @ApiOperation(value = "get the top 10 skier vertical totals for this day", nickname = "getTopTenVert", notes = "get the top 10 skier vertical totals for this day", response = TopTen.class, tags={ "resorts", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "successful operation, empty list returned if no data", response = TopTen.class),
        @ApiResponse(code = 400, message = "Invalid inputs supplied", response = ResponseMsg.class),
        @ApiResponse(code = 404, message = "Data not found", response = ResponseMsg.class) })
    @RequestMapping(value = "/resort/day/top10vert",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    ResponseEntity<TopTen> getTopTenVert(@NotNull @ApiParam(value = "resort to query by", required = true) @Valid @RequestParam(value = "resort", required = true) List<String> resort
,@NotNull @ApiParam(value = "day number in the season", required = true) @Valid @RequestParam(value = "dayID", required = true) List<String> dayID
);

}

